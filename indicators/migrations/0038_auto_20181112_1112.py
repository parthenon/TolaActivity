# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2018-11-12 19:12
from __future__ import unicode_literals

from django.db import migrations, models

def make_customsort_unique(apps, schema_editor):
    """ this is a temp fix but should not be applied to prod db - fixes a bug that will be fixed manually
    
        on the prod db.  This fix will result in some bad data on local (duplicate periodictargets with
        consecutive customsorts) - in order to use this on local comment out the first line"""
    #raise NotImplementedError("Read docstring before running")
    Indicator = apps.get_model('indicators', 'Indicator')
    for indicator in Indicator.objects.all():
        pts = indicator.periodictargets.all()
        max_customsort = pts.aggregate(models.Max('customsort'))['customsort__max']
        if max_customsort:
            next_customsort = max_customsort + 1
            for x in range(max_customsort + 1):
                if pts.filter(customsort=x).count() > 1:
                    for y in pts.filter(customsort=x)[1:]:
                        y.customsort = next_customsort
                        y.save()
                        next_customsort += 1

class Migration(migrations.Migration):

    dependencies = [
        ('indicators', '0037_merge_20181109_1321'),
    ]

    operations = [
        migrations.RunPython(make_customsort_unique),
        migrations.AlterField(
            model_name='periodictarget',
            name='customsort',
            field=models.IntegerField(default=0, verbose_name='Customsort'),
        ),
        migrations.AlterUniqueTogether(
            name='periodictarget',
            unique_together=set([('indicator', 'customsort')]),
        ),
    ]
